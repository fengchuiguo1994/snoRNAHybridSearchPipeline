[general]
	# each path should be absolute
	jobber_path = /scicore/home/zavolan/gumiennr/pythonlibs/jobber
	type = "CD"
	unmapped_reads = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/test/cd_snoRNA/test_files/rna28s_unmapped.fa"
    bed_for_index = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/test/cd_snoRNA/test_files/mapped_snoRNAs.bed"
    snoRNAs = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/snoRNAs/snoRNAs_table.tab"
    rRNAs = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/target_RNAs/rRNAs_leipzig_hsa.fa"
    tRNAs = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/target_RNAs/tRNAs_hsa.fa"
    snRNAs = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/target_RNAs/snRNAs_leipzig_hsa.fa"
    genome = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/hg19/"
    model = "/scicore/home/zavolan/gumiennr/snoRNAs/hybridSearch/ModelTraining_snOPY/Analysis/model_trained_on_all_sites.sm.bin"
    simple_model = "/scicore/home/zavolan/gumiennr/snoRNAs/hybridSearch/ModelTraining_snOPY/Analysis/simple_model_trained_on_all_sites.sm.bin"
    annotations_genes = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/annotations/genes.gff3"
    annotations_regions = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/annotations/regions.gff3"
    annotations_repeats = "/scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/data/human/annotations/repeats.gtf"
	template = /scicore/home/zavolan/gumiennr/Pipelines/jobber/snoRNAHybridSearch/scripts/template.sh
    PLEXY_bin = "/scicore/home/zavolan/gumiennr/.local/bin/plexy.pl"
	executer = drmaa
	reads_per_file = 5000
	anchor_length = 12
[tasks]
	[[SearchAnchors]]
		modules = 'Python', 'GCC'
		queue = short.q
		mem_req = 4G
		match = 2
		mismatch = -5
		gap_open = -6
		gap_extend = -4
	[[ ClusterReads ]]
		modules = 'Python', 'GCC'
		queue = short.q
		mem_req = 8G
		overlap = 1
		cluster_size = 2
		expand_cluster = 5
	[[ MakeFastaFromClusters ]]
		modules = 'Python', 'GCC'
		queue = short.q
		mem_req = 4G
	[[ BuildBowtieIndex ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 8G
	[[ ConvertToFasta ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
		length = 15
	[[ MapReads ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ FilterMapped ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ ConvertToBed ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ FilterBed ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ GetTrueChromosome ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ AppendSequence ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
		sequence_length = 50
	[[ AppendPLEXY ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
		sequence_length = 50
	[[ AppendRNAduplex ]]
		modules = 'Python', 'GCC', OpenBLAS, ViennaRNA
		queue = short.q
		mem_req = 4G
		sequence_length = 50
	[[ CalculateCONTRAFold ]]
		modules = 'Python', 'GCC', OpenBLAS, CONTRAfold
		queue = short.q
		mem_req = 4G
	[[ CalculateFlanks ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ CalculateProbability ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 4G
	[[ AnnotateResults ]]
		modules = 'Python', 'GCC', OpenBLAS
		queue = short.q
		mem_req = 6G


